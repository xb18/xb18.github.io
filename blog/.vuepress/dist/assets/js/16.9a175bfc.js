(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{410:function(a,v,t){"use strict";t.r(v);var r=t(9),e=Object(r.a)({},(function(){var a=this,v=a.$createElement,t=a._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"使用var"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用var"}},[a._v("#")]),a._v(" 使用var")]),a._v(" "),t("p",[a._v("例如"),t("code",[a._v("var a = 1")]),a._v("是在当前作用域中声明变量")]),a._v(" "),t("p",[a._v("如果在方法中声明，则为局部变量（localvariable），如果是在全局域中声明，则为全局变量")]),a._v(" "),t("h1",{attrs:{id:"不使用var"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不使用var"}},[a._v("#")]),a._v(" 不使用var")]),a._v(" "),t("p",[a._v("例如"),t("code",[a._v("a = 1")]),a._v(" 是对属性的赋值操作")]),a._v(" "),t("p",[a._v("首先，它会尝试在当前作用域链，如果是在方法中，它会查找有没有"),t("code",[a._v("a")]),a._v("这个变量，如果有，则会执行对num属性赋值，如果没有，它才会在全局对象（即当前作用域链的最顶层对象，如window对象）中创造a属性并赋值。")]),a._v(" "),t("blockquote",[t("p",[a._v("注意！它并不是声明了一个全局变量，而是创建了一个全局对象的属性。")])]),a._v(" "),t("h1",{attrs:{id:"删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[a._v("#")]),a._v(" 删除")]),a._v(" "),t("p",[a._v("由于变量声明自带不可删除属性，比较"),t("code",[a._v("var a = 1")]),a._v("跟"),t("code",[a._v("a = 1")]),a._v("，前者是变量声明，带不可删除属性，因此无法被删除；后者为全局变量的一个属性，因此可以从全局变量中删除。")])])}),[],!1,null,null,null);v.default=e.exports}}]);